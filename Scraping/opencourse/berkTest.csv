description,link,name,number,prerequisites,profs,text_profs,type,units,websites
" Foundations of data science from three perspectives: inferential thinking, computational thinking, and real-world relevance. Given data arising from some real-world phenomenon, how does one analyze that data so as to understand that phenomenon? The course teaches critical concepts and skills in computer programming and statistical inference, in conjunction with hands-on analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. It delves into social and legal issues surrounding data analysis, including issues of privacy and data ownership.",https://www2.eecs.berkeley.edu/Courses/CSC8,,CS C8," This course may be taken on its own, but students are encouraged to take it concurrently with a data science connector course (numbered 88 in a range of departments).",[{}],,, 4.0,http://inst.eecs.berkeley.edu/~cs8
" Fundamental dynamic data structures, including linear lists, queues, trees, and other linked structures; arrays strings, and hash tables. Storage management. Elementary principles of software engineering. Abstract data types. Algorithms for sorting and searching. Introduction to the Java programming language. ",https://www2.eecs.berkeley.edu/Courses/CS61B,The Structure and Interpretation of Computer Programs,CS 61B," COMPSCI 61A, COMPSCI 88, or ENGIN 7.","[{'John\xa0DeNero': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/denero.html', 'Pamela\xa0Fox': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/pamelafox.html'}]",Vanshaj Singhania,LEC, 4.0,http://inst.eecs.berkeley.edu/~cs61b
" An introduction to programming and computer science focused on abstraction techniques as means to manage program complexity. Techniques include procedural abstraction; control abstraction using recursion, higher-order functions, generators, and streams; data abstraction using interfaces, objects, classes, and generic operators; and language abstraction using interpreters and macros. The course exposes students to programming paradigms, including functional, object-oriented, and declarative approaches. It includes an introduction to asymptotic analysis of algorithms. There are several significant programming projects.",https://www2.eecs.berkeley.edu/Courses/CS61A,Self-paced courses,CS 61A, MATH 1A (may be taken concurrently); programming experience equivalent to that gained from a score of 3 or above on the Advanced Placement Computer Science A exam.,"[{'Ana\xa0Arias': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/acarias.html', 'Michael\xa0Lustig': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mlustig.html'}]","Dahlia Saba,Dixun Cui",SLF, 4.0,http://inst.eecs.berkeley.edu/~cs61a
" This course allows students who have had a linear algebra and/or basic circuit theory course to complete the work in EE16A and be ready for EE16B or EE47E. The course focuses on the fundamentals of designing modern information devices and systems that interface with the real world and provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises.",https://www2.eecs.berkeley.edu/Courses/EECS47D_1977,Self-paced courses,EECS 47D," MATH 1A, MATH 1B, COMPSCI 61A (encouraged to be taken concurrently), college level courses in linear algebra and/or circuit theory, and consent of the instructor.",[{'Nicholas\xa0Weaver': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nweaver.html'}],,SLF, 1.0-3.0,http://inst.eecs.berkeley.edu/~eecs47d
" MIPS instruction set simulation. The assembly and linking process. Caches and virtual memory. Pipelined computer organization. Students with sufficient partial credit in 61C may, with consent of instructor, complete the credit in this self-paced course. ",https://www2.eecs.berkeley.edu/Courses/CS47C_1977,Self-paced courses,CS 47C," Experience with assembly language including writing an interrupt handler, COMPSCI 9C, and consent of instructor.",[{'Prof.\xa0Josh\xa0Hug': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/joshhug.html'}],,SLF, 1.0,http://inst.eecs.berkeley.edu/~cs47c
" Iterators. Hashing, applied to strings and multi-dimensional structures. Heaps. Storage management. Design and implementation of a program containing hundreds of lines of code. Students who have completed a portion of the subject matter of COMPSCI 61B may, with consent of instructor, complete COMPSCI 61B in this self-paced course.  Please note that students in the College of Engineering are required to receive additional permission from the College as well as the EECS department for the course to count in place of COMPSCI 61B.",https://www2.eecs.berkeley.edu/Courses/CS47B_1977,Self-paced courses,CS 47B," A course in data structures, COMPSCI 9G, and consent of instructor.",[{'Paul\xa0HILFINGER': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/hilfinger.html'}],,SLF, 1.0,http://inst.eecs.berkeley.edu/~cs47b
" Implementation of generic operations. Streams and iterators. Implementation techniques for supporting functional, object-oriented, and constraint-based programming in the Scheme programming language. Together with 9D, 47A constitutes an abbreviated, self-paced version of 61A for students who have already taken a course equivalent to 61B. ",https://www2.eecs.berkeley.edu/Courses/CS47A_1977,Our Digital Quandary: The Co-Evolution of Information Technology and Society,CS 47A," COMPSCI 61B, COMPSCI 9D, and consent of instructor.",[{'Prof.\xa0Armando\xa0Fox': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/fox.html'}],,SEM, 1.0,http://inst.eecs.berkeley.edu/~cs47a
" The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small-seminar setting. Freshman seminars are offered in all campus departments, and topics vary from department to department and semester to semester. Enrollment limited to 15 freshmen. ",https://www2.eecs.berkeley.edu/Courses/CS24_4505,The Coevolution of Humans and Machines,CS 24,,[{'Edward\xa0A.\xa0LEE': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/lee.html'}],,SEM, 1.0,http://inst.eecs.berkeley.edu/~cs24
" Iterators. Hashing, applied to strings and multi-dimensional structures. Heaps. Storage management. Design and implementation of a program containing hundreds of lines of code. Students who have completed a portion of the subject matter of COMPSCI 61B may, with consent of instructor, complete COMPSCI 61B in this self-paced course.  Please note that students in the College of Engineering are required to receive additional permission from the College as well as the EECS department for the course to count in place of COMPSCI 61B.",https://www2.eecs.berkeley.edu/Courses/CS47B_1977,Self-paced courses,CS 47B," A course in data structures, COMPSCI 9G, and consent of instructor.",[{'John\xa0DeNero': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/denero.html'}],,SLF, 1.0,http://inst.eecs.berkeley.edu/~cs47b
" The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small-seminar setting. Freshman seminars are offered in all campus departments, and topics vary from department to department and semester to semester. Enrollment limited to 15 freshmen. ",https://www2.eecs.berkeley.edu/Courses/CS24_4247,"Boeing 737 MAX: Money, Machines, and Morals in Conflict",CS 24,,[{'Brian\xa0A.\xa0BARSKY': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/barsky.html'}],,SEM, 1.0,http://inst.eecs.berkeley.edu/~cs24
" The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small-seminar setting. Freshman seminars are offered in all campus departments, and topics vary from department to department and semester to semester. Enrollment limited to 15 freshmen. ",https://www2.eecs.berkeley.edu/Courses/CS24_4072,Designing Information Devices and Systems II,CS 24,,"[{'Anant\xa0Sahai': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/sahai.html', 'Vladimir\xa0Marko\xa0Stojanovic,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/vlada.html'}]","Alicia Matsumoto,Divija Hasteer,Eric Yang,Maxwell Chen,Priyans Desai,Sravya Basvapatri",LEC, 1.0,http://inst.eecs.berkeley.edu/~cs24
" This course is a follow-on to EECS 16A, and focuses on the fundamentals of designing and building modern information devices and systems that interface with the real world. The course sequence provides a comprehensive introduction to core EECS topics in machine learning, circuit design, control, and signal processing while developing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper exercises. The courses are aimed at entering students as well as non-majors seeking a broad introduction to the field.",https://www2.eecs.berkeley.edu/Courses/EECS16B,Designing Information Devices and Systems I,EECS 16B, EECS 16A,"[{'Ana\xa0Arias': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/acarias.html', 'Michael\xa0Lustig': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mlustig.html'}]","Dahlia Saba,Dixun Cui,Raghav Gupta,Vidish Gupta",LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs16b
" This course and its follow-on course EECS16B focus on the fundamentals of designing modern information devices and systems that interface with the real world. Together, this course sequence provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design while introducing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises. The courses are aimed at entering students as well as non-majors seeking a broad foundation for the field.",https://www2.eecs.berkeley.edu/Courses/EECS16A,The Beauty and Joy of Computing,EECS 16A, MATH 1A and MATH 1B (1B may be taken concurrently); COMPSCI 61A (encouraged to be taken concurrently).,[{'Prof.\xa0Josh\xa0Hug': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/joshhug.html'}],Kellyann Ye,LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs16a
" An introductory course for students with minimal prior exposure to computer science. Prepares students for future computer science courses and empowers them to utilize programming to solve problems in their field of study. Presents an overview of the history, great principles, and transformative applications of computer science, as well as a comprehensive introduction to programming. Topics include abstraction, recursion, algorithmic complexity, higher-order functions, concurrency, social implications of computing (privacy, education, algorithmic bias), and engaging research areas (data science, AI, HCI). Students will program in Snap! (a friendly graphical language) and Python, and will design and implement two projects of their choice.",https://www2.eecs.berkeley.edu/Courses/CS10,Foundations of Data Science,CS 10,,[{'David\xa0Wagner': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/wagner.html'}],Ani ADHIKARI,LEC, 4.0,http://inst.eecs.berkeley.edu/~cs10
" This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization. ",https://www2.eecs.berkeley.edu/Courses/EECS127,Probability and Random Processes,EECS 127," EECS 16A and EECS 16B, or consent of instructor.",[{'Shyam\xa0Parekh': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/shyam.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs127
" Discussion and practice of techniques for effective teaching, focusing on issues most relevant to teaching assistants in computer science courses. ",https://www2.eecs.berkeley.edu/Courses/CS375,Adaptive Instruction Methods in Computer Science,CS 375, Consent of instructor. ,[{'Christopher\xa0Hunn': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/cthunn.html'}],Kyle Kishimoto,LEC, 2.0,http://inst.eecs.berkeley.edu/~cs375
" Discussion of effective teaching techniques. Use of educational objectives, alternative forms of instruction, and proven techniques to enhance student learning. This course is intended to orient new student instructors to more effectively teach courses offered by the Department of Electrical Engineering and Computer Sciences at UC Berkeley.",https://www2.eecs.berkeley.edu/Courses/EE375,Population Games,EE 375, Teaching assistant or graduate student,[{'Murat\xa0Arcak': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/arcak.html'}],,LEC, 2.0,http://inst.eecs.berkeley.edu/~ee375
 Investigation of problems in electrical engineering. ,https://www2.eecs.berkeley.edu/Courses/EE299,Introduction to Quantum Devices,EE 299,,[{'Alp\xa0Sipahigil': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/alp.html'}],,LEC, 1-12,http://inst.eecs.berkeley.edu/~ee299
 The 290 courses cover current topics of research interest in electrical engineering. The course content may vary from semester to semester. ,https://www2.eecs.berkeley.edu/Courses/EE290_4188,21st Century Power System Dynamics,EE 290, Consent of instructor. ,[{'Duncan\xa0Callaway': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/dcal.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~ee290
 The 290 courses cover current topics of research interest in electrical engineering. The course content may vary from semester to semester. ,https://www2.eecs.berkeley.edu/Courses/EE290_4525,Medical Imaging Signals and Systems,EE 290, Consent of instructor. ,[{'Steven\xa0Conolly': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/sconolly.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~ee290
 The 290 courses cover current topics of research interest in electrical engineering. The course content may vary from semester to semester. ,https://www2.eecs.berkeley.edu/Courses/EE290_3429,Introduction to Digital Design and Integrated Circuits Lab,EE 290, Consent of instructor. ,[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 1.0-4.0,http://inst.eecs.berkeley.edu/~ee290
" Biomedical imaging is a clinically important application of engineering, applied mathematics, physics, and medicine. In this course, we apply linear systems theory and basic physics to analyze X-ray imaging, computerized tomography, nuclear medicine, and MRI. We cover the basic physics and instrumentation that characterizes medical image as an ideal perfect-resolution image blurred by an impulse response. This material could prepare the student for a career in designing new medical imaging systems that reliably detect small tumors or infarcts. ",https://www2.eecs.berkeley.edu/Courses/EEC261,Introduction to Digital Design and Integrated Circuits Lab,EE C261," Undergraduate level course work covering integral and differential calculus, two classes in engineering-level physics, introductory level linear algebra, introductory level statistics, at least 1 course in LTI system theory including (analog convolution, Fourier transforms, and Nyquist sampling theory). The recommended undergrad course prerequisites are introductory level skills in Python or Matlab and either EECS 16A, EECS 16B and EL ENG 120, or MATH 54, BIO ENG 101, and BIO ENG 105.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 4.0,http://inst.eecs.berkeley.edu/~ee261
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251lb
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LA," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251la
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits,EECS 251LA," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LEC, 2.0,http://inst.eecs.berkeley.edu/~eecs251la
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Embedded Systems,EECS 251LA," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Sanjit\xa0A.\xa0Seshia': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/seshia.html'}],,LEC, 2.0,http://inst.eecs.berkeley.edu/~eecs251la
" An introduction to digital circuit and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The class includes extensive use of industrial grade design automation and verification tools for assignments, labs, and projects.",https://www2.eecs.berkeley.edu/Courses/EECS251A,Introduction to Microelectromechanical Systems (MEMS),EECS 251A, EECS 16A and EECS 16B; COMPSCI 61C; and recommended: EL ENG 105. Students must enroll concurrently in at least one the laboratory flavors EECS 251LA or EECS 251LB. Students wishing to take a second laboratory flavor next term can sign-up only for that laboratory section and receive a letter grade. The prerequisite for “Lab-only” enrollment that term will be EECS 251A from previous terms.,"[{'Prof.\xa0Kristofer\xa0PISTER,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/pister.html'}]",,LEC, 3.0,http://inst.eecs.berkeley.edu/~eecs251a
" This course introduces students to the basics of models, analysis tools, and control for embedded systems operating in real time. Students learn how to combine physical processes with computation. Topics include models of computation, control, analysis and verification, interfacing with the physical world, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component, with emphasis on a semester-long sequence of projects. ",https://www2.eecs.berkeley.edu/Courses/EEC249A,Analog Integrated Circuits,EE C249A,,[{'Rikky\xa0Muller': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/rikky.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee249a
" This course will teach fundamentals of micromachining and microfabrication techniques, including planar thin-film process technologies, photolithographic techniques, deposition and etching techniques, and the other technologies that are central to MEMS fabrication. It will pay special attention to teaching of fundamentals necessary for the design and analysis of devices and systems in mechanical, electrical, fluidic, and thermal energy/signal domains, and will teach basic techniques for multi-domain analysis. Fundamentals of sensing and transduction mechanisms including capacitive and piezoresistive techniques, and design and analysis of micmicromachined miniature sensors and actuators using these techniques will be covered.",https://www2.eecs.berkeley.edu/Courses/EE247A,Integrated-Circuit Devices,EE 247A, EECS 16A and EECS 16B; or consent of instructor required.,[{'Ali\xa0Javey': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/javey.html'}],,LEC, 3.0,http://inst.eecs.berkeley.edu/~ee247a
" Single and multiple stage transistor amplifiers. Operational amplifiers. Feedback amplifiers, 2-port formulation, source, load, and feedback network loading. Frequency response of cascaded amplifiers, gain-bandwidth exchange, compensation, dominant pole techniques, root locus. Supply and temperature independent biasing and references. Selected applications of analog circuits such as analog-to-digital converters, switched capacitor filters, and comparators. Hardware laboratory and design project. ",https://www2.eecs.berkeley.edu/Courses/EE240A,Information Theory and Coding,EE 240A, EL ENG 105,[{'Venkatachalam\xa0ANANTHARAM': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/anantharam.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee240a
" Overview of electronic properties of semiconductors. Metal-semiconductor contacts, pn junctions, bipolar transistors, and MOS field-effect transistors. Properties that are significant to device operation for integrated circuits. Silicon device fabrication technology. ",https://www2.eecs.berkeley.edu/Courses/EE230A,Convex Optimization,EE 230A, 40 or 100. ,"[{'Laurent\xa0El\xa0Ghaoui': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/elghaoui.html', 'Somayeh\xa0Sojoudi': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/sojoudi.html'}]",,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee230a
" Convex optimization is a class of nonlinear optimization problems where the objective to be minimized, and the constraints, are both convex.   The course covers some convex optimization theory and algorithms, and describes various applications arising in engineering design, machine learning and statistics, finance, and operations research. The course includes laboratory assignments, which consist of hands-on experiments with the optimization software CVX, and a discussion section.",https://www2.eecs.berkeley.edu/Courses/EE227BT,Optimization Models in Engineering,EE 227BT, MATH 54 and STAT 2.,[{'Laurent\xa0El\xa0Ghaoui': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/elghaoui.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee227bt
" This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization. ",https://www2.eecs.berkeley.edu/Courses/EECS227AT,Random Processes in Systems,EECS 227AT, MATH 54 or consent of instructor.,[{'Thomas\xa0Courtade': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/courtade.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs227at
" Probability, random variables and their convergence, random processes. Filtering of wide sense stationary processes, spectral density, Wiener and Kalman filters. Markov processes and Markov chains. Gaussian, birth and death, poisson and shot noise processes. Elementary queueing analysis. Detection of signals in Gaussian and shot noise, elementary parameter estimation. ",https://www2.eecs.berkeley.edu/Courses/EE226A,Audio Signal Processing in Humans and Machines,EE 226A, EL ENG 120 and STAT 200A.,[{'Gopala\xa0Krishna\xa0Anumanchipalli': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/gopala.html'}],Gasper Begus,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee226a
" Introduction to relevant signal processing and basics of pattern recognition. Introduction to coding, synthesis, and recognition. Models of speech and music production and perception. Signal processing for speech analysis. Pitch perception and auditory spectral analysis with applications to speech and music. Vocoders and music synthesizers. Statistical speech recognition, including introduction to Hidden Markov Model and Neural Network approaches. ",https://www2.eecs.berkeley.edu/Courses/EE225D,Statistical Signal Processing,EE 225D, EL ENG 123 and STAT 200A; or graduate standing and consent of instructor.,[{'Jiantao\xa0JIAO': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/jiantao.html'}],,LEC, 3.0,http://inst.eecs.berkeley.edu/~ee225d
" This course connects classical statistical signal processing (Hilbert space filtering theory by Wiener and Kolmogorov, state space model, signal representation, detection and estimation, adaptive filtering) with modern statistical and machine learning theory and applications. It focuses on concrete algorithms and combines principled theoretical thinking with real applications.",https://www2.eecs.berkeley.edu/Courses/EECS225A,Linear System Theory,EECS 225A, EL ENG 120 and EECS 126.,"[{'Prof.\xa0S.\xa0Shankar\xa0SASTRY,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/sastry.html'}]",Chih-Yuan Chiu,LEC, 3.0,http://inst.eecs.berkeley.edu/~eecs225a
" Basic system concepts; state-space and I/O representation. Properties of linear systems. Controllability, observability, minimality, state and output-feedback. Stability. Observers. Characteristic polynomial. Nyquist test. ",https://www2.eecs.berkeley.edu/Courses/EE221A,Experiential Advanced Control Design I,EE 221A, EL ENG 120; and MATH 110 recommended.,[{}],Francesco Borrelli,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee221a
" Experience-based learning in the design of SISO and MIMO feedback controllers for linear systems. The student will master skills needed to apply linear control design and analysis tools to classical and modern control problems. In particular, the participant will be exposed to and develop expertise in two key control design technologies: frequency-domain control synthesis and time-domain optimization-based approach. ",https://www2.eecs.berkeley.edu/Courses/EEC220B,Advanced Control Systems I,EE C220B,,[{}],Masayoshi TOMIZUKA,LEC, 3.0,http://inst.eecs.berkeley.edu/~ee220b
" Input-output and state space representation of linear continuous and discrete time dynamic systems. Controllability, observability, and stability. Modeling and identification. Design and analysis of single and multi-variable feedback control systems in transform and time domain. State observer. Feedforward/preview control. Application to engineering systems. ",https://www2.eecs.berkeley.edu/Courses/EEC220A,Introduction to Optical Engineering,EE C220A,,[{'Boubacar\xa0Kante': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/bkante.html'}],,LEC, 3.0,http://inst.eecs.berkeley.edu/~ee220a
" Fundamental principles of optical systems. Geometrical optics and aberration theory. Stops and apertures, prisms, and mirrors. Diffraction and interference. Optical materials and coatings. Radiometry and photometry. Basic optical devices and the human eye. The design of optical systems. Lasers, fiber optics, and holography. ",https://www2.eecs.berkeley.edu/Courses/EE218A,Power Electronics,EE 218A," MATH 53; EECS 16A and EECS 16B, or MATH 54.",[{}],Nathan Ellis,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee218a
" Power conversion circuits and techniques. Characterization and design of magnetic devices including transformers, inductors, and electromagnetic  actuators.  Characteristics of  power semiconductor devices, including power diodes, SCRs, MOSFETs, IGBTs, and emerging wide bandgap devices.  Applications to renewable energy systems, high-efficiency lighting, power management in mobile electronics, and electric machine drives.  Simulation based laboratory and design project.",https://www2.eecs.berkeley.edu/Courses/EE213A,Computational Principles for High-dimensional Data Analysis,EE 213A, EL ENG 105 or consent of instructor.,"[{'Jiantao\xa0JIAO': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/jiantao.html', 'Yi\xa0Ma,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/yima.html'}]",,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee213a
" Introduction to fundamental geometric and statistical concepts and principles of low-dimensional models for high-dimensional signal and data analysis, spanning basic theory, efficient algorithms, and diverse real-world applications. Systematic study of both sampling complexity and computational complexity for sparse, low-rank, and low-dimensional models – including important cases such as matrix completion, robust principal component analysis, dictionary learning, and deep networks.",https://www2.eecs.berkeley.edu/Courses/EECS208,Introduction to Robotics,EECS 208," The following courses are recommended undergraduate linear algebra (Math 110), statistics (Stat 134), and probability (EE126). Back-ground in signal processing (ELENG 123), optimization (ELENG C227T), machine learning (CS189/289), and computer vision (COMPSCI C280) may allow you to appreciate better certain aspects of the course material, but not necessary all at once. The course is open to senior undergraduates, with consent from the instructor.","[{'Yi\xa0Ma,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/yima.html'}]","Jaeyun Seo,Jay Monga,Josephine Koe,Koushil Sreenath",LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs208
" This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward & inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, & control. We will present techniques for geometric motion planning & obstacle avoidance. Open problems in trajectory generation with dynamic constraints will also be discussed. The course also presents the use of the same analytical techniques as manipulation for the analysis of images & computer vision. Low level vision, structure from motion, & an introduction to vision & learning will be covered. The course concludes with current applications of robotics.",https://www2.eecs.berkeley.edu/Courses/EECS206A,Introduction to Neurotechnology,EECS 206A," Familiarity with linear algebra at level of EECS 16A/EECS 16B or MATH 54. Experience doing coding in python at the level of COMPSCI 61A. Preferred: experience developing software at level of COMPSCI 61B and experience using Linux. EECS 120 is not required, but some knowledge of linear systems may be helpful for the control of robots.",[{'Chunlei\xa0Liu': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/chunleiliu.html'}],,GRP, 4.0,http://inst.eecs.berkeley.edu/~eecs206a
" Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE198_4666,Pioneers in Engineering (PIE) Robotics DeCal,EE 198, 2.0 GPA or better; 60 units completed. ,[{'Pieter\xa0Abbeel': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/abbeel.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~ee198
" Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE198_4660,Hands-On PCB Engineering (HOPE),EE 198, 2.0 GPA or better; 60 units completed. ,[{'Clark\xa0Nguyen': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/ctnguyen.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~ee198
" Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE198_3415,Exploration of Inclusive Pathways into the Tech Industry,EE 198, 2.0 GPA or better; 60 units completed. ,[{'Costas\xa0SPANOS': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/spanos.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~ee198
" Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE198_4657,Field Study,EE 198, 2.0 GPA or better; 60 units completed. ,[{'Chunlei\xa0Liu': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/chunleiliu.html'}],,FLD, 1-4,http://inst.eecs.berkeley.edu/~ee198
" Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation. ",https://www2.eecs.berkeley.edu/Courses/EE197,Field Study,EE 197, Consent of instructor (see department adviser). ,[{'Avideh\xa0ZAKHOR': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/zakhor.html'}],,FLD, 1-4,http://inst.eecs.berkeley.edu/~ee197
" Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation. ",https://www2.eecs.berkeley.edu/Courses/EE197,Field Study,EE 197, Consent of instructor (see department adviser). ,"[{'Ana\xa0Arias': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/acarias.html', 'Michael\xa0Lustig': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mlustig.html'}]",,FLD, 1-4,http://inst.eecs.berkeley.edu/~ee197
" Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation. ",https://www2.eecs.berkeley.edu/Courses/EE197,Introduction to Digital Design and Integrated Circuits Lab,EE 197, Consent of instructor (see department adviser). ,[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 1-4,http://inst.eecs.berkeley.edu/~ee197
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB," EECS 16A, EECS 16B, and COMPSCI 61C; EL ENG 105 recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB," EECS 16A, EECS 16B, and COMPSCI 61C; EL ENG 105 recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB," EECS 16A, EECS 16B, and COMPSCI 61C; EL ENG 105 recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB," EECS 16A, EECS 16B, and COMPSCI 61C; EL ENG 105 recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151lb
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LA," COMPSCI 61C, EECS 16A, EECS 16B, and EL ENG 105.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151la
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LA," COMPSCI 61C, EECS 16A, EECS 16B, and EL ENG 105.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151la
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits,EECS 151LA," COMPSCI 61C, EECS 16A, EECS 16B, and EL ENG 105.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LEC, 2.0,http://inst.eecs.berkeley.edu/~eecs151la
" An introduction to digital and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher-levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The class includes extensive use of industrial grade design automation and verification tools for assignments, labs and projects.  
The class has two lab options: ASIC Lab (EECS 151LA) and FPGA Lab (EECS 151LB). Students must enroll in at least one of the labs concurrently with the class.",https://www2.eecs.berkeley.edu/Courses/EECS151,Introduction to Embedded Systems,EECS 151, EECS 16A and EECS 16B.,[{'Sanjit\xa0A.\xa0Seshia': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/seshia.html'}],,LEC, 3.0,http://inst.eecs.berkeley.edu/~eecs151
" This course introduces students to the basics of modeling, analysis, and design of embedded, cyber-physical systems. Students learn how to integrate computation with physical processes to meet a desired specification. Topics include models of computation, control, analysis and verification, interfacing with the physical world, real-time behaviors, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component, with emphasis on a semester-long sequence of projects.",https://www2.eecs.berkeley.edu/Courses/EECS149,Introduction to Microelectromechanical Systems (MEMS),EECS 149," COMPSCI 61C and COMPSCI 70; EECS 16A and EECS 16B, or permission of instructor.","[{'Prof.\xa0Kristofer\xa0PISTER,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/pister.html'}]",,LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs149
" This course will teach fundamentals of micromachining and microfabrication techniques, including planar thin-film process technologies, photolithographic techniques, deposition and etching techniques, and the other technologies that are central to MEMS fabrication. It will pay special attention to teaching of fundamentals necessary for the design and analysis of devices and systems in mechanical, electrical, fluidic, and thermal energy/signal domains, and will teach basic techniques for multi-domain analysis. Fundamentals of sensing and transduction mechanisms including capacitive and piezoresistive techniques, and design and analysis of micmicromachined miniature sensors and actuators using these techniques will be covered.",https://www2.eecs.berkeley.edu/Courses/EE147,Medical Imaging Signals and Systems,EE 147, EECS 16A and EECS 16B.,[{'Steven\xa0Conolly': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/sconolly.html'}],,LEC, 3.0,http://inst.eecs.berkeley.edu/~ee147
" Biomedical imaging is a clinically important application of engineering, applied mathematics, physics, and medicine. In this course, we apply linear systems theory and basic physics to analyze X-ray imaging, computerized tomography, nuclear medicine, and MRI. We cover the basic physics and instrumentation that characterizes medical image as an ideal perfect-resolution image blurred by an impulse response. This material could prepare the student for a career in designing new medical imaging systems that reliably detect small tumors or infarcts. ",https://www2.eecs.berkeley.edu/Courses/EEC145B,Microfabrication Technology,EE C145B," Prerequisites are introductory level skills in Python/Matlab; and either EECS 16A, EECS 16B, and EL ENG 120; or MATH 54, BIO ENG 105, and BIO ENG 101.",[{'Muhammad\xa0Hussain': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/hussain.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee145b
" Integrated circuit device fabrication and surface micromachining technology. Thermal oxidation, ion implantation, impurity diffusion, film deposition, expitaxy, lithography, etching, contacts and interconnections, and process integration issues. Device design and mask layout, relation between physical structure and electrical/mechanical performance. MOS transistors and poly-Si surface microstructures will be fabricated in the laboratory and evaluated. ",https://www2.eecs.berkeley.edu/Courses/EE143,Analog Integrated Circuits,EE 143, PHYSICS 7B,[{'Rikky\xa0Muller': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/rikky.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee143
" Single and multiple stage transistor amplifiers. Operational amplifiers. Feedback amplifiers, 2-port formulation, source, load, and feedback network loading. Frequency response of cascaded amplifiers, gain-bandwidth exchange, compensation, dominant pole techniques, root locus. Supply and temperature independent biasing and references. Selected applications of analog circuits such as analog-to-digital converters, switched capacitor filters, and comparators. Hardware laboratory and design project. ",https://www2.eecs.berkeley.edu/Courses/EE140,Introduction to Electric Power Systems,EE 140, EL ENG 105,[{'Alexandra\xa0von\xa0Meier': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/vonmeier.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee140
" Overview of conventional electric power conversion and delivery, emphasizing a systemic understanding of the electric grid with primary focus at the transmission level, aimed toward recognizing needs and opportunities for technological innovation. Topics include aspects of a.c. system design, electric generators, components of transmission and distribution systems, power flow analysis, system planning and operation, performance measures, and limitations of legacy technologies. ",https://www2.eecs.berkeley.edu/Courses/EE137A,Integrated-Circuit Devices,EE 137A," Physics 7B; EECS 16A and EECS 16B, or consent of instructor.",[{'Ali\xa0Javey': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/javey.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee137a
" Overview of electronic properties of semiconductor. Metal-semiconductor contacts, pn junctions, bipolar transistors, and MOS field-effect transistors. Properties that are significant to device operation for integrated circuits. Silicon device fabrication technology. ",https://www2.eecs.berkeley.edu/Courses/EE130,Optimization Models in Engineering,EE 130, EECS 16A and EECS 16B.,[{'Laurent\xa0El\xa0Ghaoui': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/elghaoui.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee130
" This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization. ",https://www2.eecs.berkeley.edu/Courses/EECS127,Probability and Random Processes,EECS 127," EECS 16A and EECS 16B, or consent of instructor.",[{'Shyam\xa0Parekh': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/shyam.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs127
" This course covers the fundamentals of probability and random processes useful in fields such as networks, communication, signal processing, and control. Sample space, events, probability law. Conditional probability. Independence. Random variables. Distribution, density functions. Random vectors. Law of large numbers. Central limit theorem. Estimation and detection. Markov chains. ",https://www2.eecs.berkeley.edu/Courses/EECS126,Signals and Systems,EECS 126, COMPSCI 70 preferred but not required; Familiarity with linear algebra.,[{'Avideh\xa0ZAKHOR': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/zakhor.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs126
" Continuous and discrete-time transform analysis techniques with illustrative applications. Linear and time-invariant systems, transfer functions. Fourier series, Fourier transform, Laplace and Z-transforms. Sampling and reconstruction. Solution of differential and difference equations using transforms. Frequency response, Bode plots, stability analysis. Illustrated by analysis of communication systems and feedback control systems. ",https://www2.eecs.berkeley.edu/Courses/EE120,Introduction to Optical Engineering,EE 120, EECS 16A and EECS 16B.,[{'Boubacar\xa0Kante': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/bkante.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee120
" Fundamental principles of optical systems. Geometrical optics and aberration theory. Stops and apertures, prisms, and mirrors. Diffraction and interference. Optical materials and coatings. Radiometry and photometry. Basic optical devices and the human eye. The design of optical systems. Lasers, fiber optics, and holography. ",https://www2.eecs.berkeley.edu/Courses/EE118,Power Electronics,EE 118," MATH 53; EECS 16A and EECS 16B, or MATH 54.",[{}],Nathan Ellis,LEC, 4.0,http://inst.eecs.berkeley.edu/~ee118
" Power conversion circuits and techniques. Characterization and design of magnetic devices including transformers, reactors, and electromagnetic machinery. Characteristics of bipolar and MOS power semiconductor devices. Applications to motor control, switching power supplies, lighting, power systems, and other areas as appropriate. ",https://www2.eecs.berkeley.edu/Courses/EE113,Introduction to Robotics,EE 113, EL ENG 105 or consent of instructor.,"[{'Yi\xa0Ma,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/yima.html'}]","Jaeyun Seo,Jay Monga,Josephine Koe,Koushil Sreenath",LEC, 4.0,http://inst.eecs.berkeley.edu/~ee113
" This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward & inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, & control. We will present techniques for geometric motion planning & obstacle avoidance. Open problems in trajectory generation with dynamic constraints will also be discussed. The course also presents the use of the same analytical techniques as manipulation for the analysis of images & computer vision. Low level vision, structure from motion, & an introduction to vision & learning will be covered. The course concludes with current applications of robotics.",https://www2.eecs.berkeley.edu/Courses/EECSC106A,Microelectronic Devices and Circuits,EECS C106A," Familiarity with linear algebra at the level of EECS 16A/EECS 16B or Math 54. Experience coding in python at the level of COMPSCI 61A. 
Preferred: experience developing software at the level of COMPSCI 61B and experience using Linux.",[{'Ali\xa0Niknejad': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/niknejad.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs106a
" This course covers the fundamental circuit and device concepts needed to understand analog integrated circuits. After an overview of the basic properties of semiconductors, the p-n junction and MOS capacitors are described and the MOSFET is modeled as a large-signal device. Two port small-signal amplifiers and their realization using single stage and multistage CMOS building blocks are discussed. Sinusoidal steady-state signals are introduced and the techniques of phasor analysis are developed, including impedance and the magnitude and phase response of linear circuits. The frequency responses of single and multi-stage amplifiers are analyzed. Differential amplifiers are introduced. ",https://www2.eecs.berkeley.edu/Courses/EE105,Personal Finance,EE 105, EECS 16A and EECS 16B.,[{'Laurent\xa0El\xa0Ghaoui': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/elghaoui.html'}],,GRP, 4.0,http://inst.eecs.berkeley.edu/~ee105
" Group study of selected topics in electrical engineering, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/EE98_4659,Sophomore Seminar,EE 98,,[{'Michael\xa0Lustig': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mlustig.html'}],Michael W. Zuerch,SEM, 1-4,http://inst.eecs.berkeley.edu/~ee98
" Sophomore seminars are small interactive courses offered by faculty members in departments all across the campus. Sophomore seminars offer opportunity for close, regular intellectual contact between faculty members and students in the crucial second year. The topics vary from department to department and semester to semester. Enrollment limited to 15 sophomores. ",https://www2.eecs.berkeley.edu/Courses/EE84,Self-paced courses,EE 84, At discretion of instructor. ,"[{'Ana\xa0Arias': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/acarias.html', 'Michael\xa0Lustig': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mlustig.html'}]","Dahlia Saba,Dixun Cui",SLF,,
" This course allows students who have had a linear algebra and/or basic circuit theory course to complete the work in EE16A and be ready for EE16B or EE47E. The course focuses on the fundamentals of designing modern information devices and systems that interface with the real world and provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises.",https://www2.eecs.berkeley.edu/Courses/EECS47D_1977,Hands-on Ham Radio,EECS 47D," MATH 1A, MATH 1B, COMPSCI 61A (encouraged to be taken concurrently), college level courses in linear algebra and/or circuit theory, and consent of the instructor.",[{'Michael\xa0Lustig': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mlustig.html'}],,SEM, 1.0-3.0,http://inst.eecs.berkeley.edu/~eecs47d
" The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. Freshman seminars are offered in all campus departments, and topics may vary from department to department and semester to semester. ",https://www2.eecs.berkeley.edu/Courses/EE24_4510,Designing Information Devices and Systems II,EE 24,,"[{'Anant\xa0Sahai': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/sahai.html', 'Vladimir\xa0Marko\xa0Stojanovic,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/vlada.html'}]","Alicia Matsumoto,Divija Hasteer,Eric Yang,Maxwell Chen,Priyans Desai,Sravya Basvapatri",LEC, 1.0,http://inst.eecs.berkeley.edu/~ee24
" Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25. ",https://www2.eecs.berkeley.edu/Courses/EE39_2893,BLISS: Berkeley Low-cost Interplanetary Solar Sail,EE 39, Priority given to freshmen and sophomores. ,"[{'Prof.\xa0Kristofer\xa0PISTER,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/pister.html'}]",,SEM, 2.0-4.0,http://inst.eecs.berkeley.edu/~ee39
" This course and its follow-on course EECS16B focus on the fundamentals of designing modern information devices and systems that interface with the real world. Together, this course sequence provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design while introducing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises. The courses are aimed at entering students as well as non-majors seeking a broad foundation for the field.",https://www2.eecs.berkeley.edu/Courses/EECS16A,,EECS 16A, MATH 1A and MATH 1B (1B may be taken concurrently); COMPSCI 61A (encouraged to be taken concurrently).,[{}],,, 4.0,http://inst.eecs.berkeley.edu/~eecs16a
" This course is a follow-on to EECS 16A, and focuses on the fundamentals of designing and building modern information devices and systems that interface with the real world. The course sequence provides a comprehensive introduction to core EECS topics in machine learning, circuit design, control, and signal processing while developing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper exercises. The courses are aimed at entering students as well as non-majors seeking a broad introduction to the field.",https://www2.eecs.berkeley.edu/Courses/EECS16B,Designing Information Devices and Systems I,EECS 16B, EECS 16A,"[{'Ana\xa0Arias': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/acarias.html', 'Michael\xa0Lustig': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mlustig.html'}]","Dahlia Saba,Dixun Cui,Raghav Gupta,Vidish Gupta",LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs16b
" This is a course for aspiring teachers or those who want to instruct with expertise from evidence-based research and proven equity-oriented practices. It provides pedagogical training by introducing the big ideas of teaching and learning, and illustrating how to put them into practice. The course is divided into three sections—instructing the individual; a group; and psycho-social factors that affect learning at any level. These sections are designed to enhance any intern’s, tutor’s, or TA’s teaching skillset. Class is discussion based, and covers theoretical and practical pedagogical aspects to teaching in STEM. An integral feature of the course involves providing weekly tutoring sessions.",https://www2.eecs.berkeley.edu/Courses/CS370,Adaptive Instruction Methods in Computer Science,CS 370, Prerequisite satisfied Concurrently: experience tutoring or as an academic intern; or concurrently serving as an academic intern while taking course.,[{'Christopher\xa0Hunn': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/cthunn.html'}],Kyle Kishimoto,LEC, 3.0,http://inst.eecs.berkeley.edu/~cs370
" This is a course for aspiring teachers or those who want to instruct with expertise from evidence-based research and proven equity-oriented practices. It provides pedagogical training by introducing the big ideas of teaching and learning, and illustrating how to put them into practice. The course is divided into three sections—instructing the individual; a group; and psycho-social factors that affect learning at any level. These sections are designed to enhance any intern’s, tutor’s, or TA’s teaching skillset. Class is discussion based, and covers theoretical and practical pedagogical aspects to teaching in STEM. An integral feature of the course involves providing weekly tutoring sessions.",https://www2.eecs.berkeley.edu/Courses/CS370,Database Seminar,CS 370, Prerequisite satisfied Concurrently: experience tutoring or as an academic intern; or concurrently serving as an academic intern while taking course.,"[{'Aditya\xa0Parameswaran': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/adityagp.html', 'Alvin\xa0Cheung': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/akcheung.html', 'Joe\xa0Hellerstein': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/hellerstein.html'}]",,LEC, 3.0,http://inst.eecs.berkeley.edu/~cs370
" Advanced study in various subjects through seminars on topics to be selected each year, informal group studies of special problems, group participation in comprehensive design problems, or group research on complete problems for analysis and experimentation. ",https://www2.eecs.berkeley.edu/Courses/CS298_3143,Research Culture and Community Norms,CS 298,,"[{'Natacha\xa0Crooks': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/ncrooks.html', 'Sarah\xa0Chasins': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/schasins.html'}]",,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs298
" Advanced study in various subjects through seminars on topics to be selected each year, informal group studies of special problems, group participation in comprehensive design problems, or group research on complete problems for analysis and experimentation. ",https://www2.eecs.berkeley.edu/Courses/CS298_4248,"Group Studies Seminars, or Group Research",CS 298,,[{'David\xa0Wagner': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/wagner.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs298
" Advanced study in various subjects through seminars on topics to be selected each year, informal group studies of special problems, group participation in comprehensive design problems, or group research on complete problems for analysis and experimentation. ",https://www2.eecs.berkeley.edu/Courses/CS298,Intro to Research in Quantum Computation,CS 298,,[{'Umesh\xa0VAZIRANI': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/vazirani.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs298
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4585,Phase Transitions,CS 294,,[{'Christian\xa0Borgs': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/borgs.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4544,Pseudorandomness,CS 294,,"[{'Avishay\xa0Tal,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/atal.html'}]",Kewen Wu,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_1902,Advanced topics in learning and decision making,CS 294,,"[{'Pieter\xa0Abbeel': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/abbeel.html', 'Stuart\xa0RUSSELL': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/russell.html'}]",,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4508,Design and Evaluation of Processes for Teaching Computer Science at Scale,CS 294,,[{'Michael\xa0Ball': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mball.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4323,Algorithms and Inequality,CS 294,,[{'Rediet\xa0Abebe': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/rabebe.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4650,Machine Learning and Econ,CS 294,,"[{'Nika\xa0Haghtalab': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nika.html', 'Prof.\xa0Michael\xa0JORDAN,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/jordan.html'}]",,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4506,Special Topics on Decentralized Finance,CS 294,,[{'Xiaodong\xa0Song': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/song.html'}],"Nate Pola,Neil Giridharan,Vivek Nair,Xiaoyuan Liu",LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4634,Privacy Preserving Systems,CS 294,,[{'Natacha\xa0Crooks': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/ncrooks.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4181,Computational Color,CS 294,,[{'Ren\xa0Ng': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/yirenng.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_3733,Immersive Computing and Virtual Reality,CS 294,,[{'Bjoern\xa0Hartmann': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/hartmann.html'}],"Dr. Allen Y. Yang, PhD",LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4180,Special Topics,CS 294,,[{'John\xa0CANNY': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/canny.html'}],"Alex Mabanta,Evonne Ng,Omotara Oloye",LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294,Experimental Design for Machine Learning on Multimedia Data,CS 294,,"[{'Dr.\xa0Gerald\xa0Friedland,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/friedland.html'}]",Eleanor Cawthon,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_3438,Vision and Language AI Seminar,CS 294,,[{'Trevor\xa0Darrell': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/darrell.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4651,Intro to Computer Vision and Computational Photography,CS 294,,"[{'Alexei\xa0Efros': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/efros.html', 'Angjoo\xa0Kanazawa': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/kanazawa.html'}]",Tim Brooks,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
 Topics will vary from semester to semester. See Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS294_4237,Introduction to Machine Learning,CS 294,,"[{'JENNIFER\xa0LISTGARTEN': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/listgarten.html', 'Jitendra\xa0MALIK': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/malik.html'}]",Marvin M Zhang,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs294
" This course provides an introduction to theoretical foundations, algorithms, and methodologies for machine learning, emphasizing the role of probability and optimization and exploring a variety of real-world applications. Students are expected to have a solid foundation in calculus and linear algebra as well as exposure to the basic tools of logic and probability, and should be familiar with at least one modern, high-level programming language. ",https://www2.eecs.berkeley.edu/Courses/CS289A,"Deep Reinforcement Learning, Decision Making, and Control",CS 289A," MATH 53, MATH 54, COMPSCI 70, and COMPSCI 188; or consent of instructor.",[{'Sergey\xa0Levine': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/svlevine.html'}],"Anikait Singh,Dhruv Shah,Jensen Gao,Kevin Li,Xinyun Chen",LEC, 4.0,http://inst.eecs.berkeley.edu/~cs289a
" Intersection of control, reinforcement learning, and deep learning. Deep learning methods, which train large parametric function approximators, achieve excellent results on problems that require reasoning about unstructured real-world situations (e.g., computer vision, speech recognition, NLP). Advanced treatment of the reinforcement learning formalism, the most critical model-free reinforcement learning algorithms (policy gradients, value function and Q-function learning, and actor-critic), a discussion of model-based reinforcement learning algorithms, an overview of imitation learning, and a range of advanced topics (e.g., exploration, model-based learning with video prediction, transfer learning, multi-task learning, and meta-learning).",https://www2.eecs.berkeley.edu/Courses/CS285,Statistical Learning Theory,CS 285, COMPSCI 189 or COMPSCI 289A or equivalent.,"[{'Benjamin\xa0Recht': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/brecht.html', 'Moritz\xa0Hardt': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mhardt.html'}]","Meena Jagadeesan,Mihaela Curmei",LEC, 3.0,http://inst.eecs.berkeley.edu/~cs285
" Classification regression, clustering, dimensionality, reduction, and density estimation. Mixture models, hierarchical models, factorial models, hidden Markov, and state space models, Markov properties, and recursive algorithms for general probabilistic inference nonparametric methods including decision trees, kernal methods, neural networks, and wavelets. Ensemble methods. ",https://www2.eecs.berkeley.edu/Courses/CSC281A,Implementation of Programming Languages,CS C281A,,[{'Koushik\xa0Sen': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/ksen.html'}],,LEC, 3.0,http://inst.eecs.berkeley.edu/~cs281a
" Compiler construction. Lexical analysis, syntax analysis. Semantic analysis code generation and optimization. Storage management. Run-time organization. ",https://www2.eecs.berkeley.edu/Courses/CS264,Design of Programming Languages,CS 264, COMPSCI 164; COMPSCI 263 recommended.,[{'Alvin\xa0Cheung': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/akcheung.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~cs264
" Selected topics from: analysis, comparison, and design of programming languages, formal description of syntax and semantics, advanced programming techniques, structured programming, debugging, verification of programs and compilers, and proofs of correctness. ",https://www2.eecs.berkeley.edu/Courses/CS263,Advanced Topics in Computer Systems,CS 263, COMPSCI 164,[{'John\xa0Kubiatowicz': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/kubiatowicz.html'}],Stephanie Wang,LEC, 3.0,http://inst.eecs.berkeley.edu/~cs263
" Graduate survey of systems for managing computation and information, covering a breadth of topics: early systems; volatile memory management, including virtual memory and buffer management; persistent memory systems, including both file systems and transactional storage managers; storage metadata, physical vs. logical naming, schemas, process scheduling, threading and concurrency control; system support for networking, including remote procedure calls, transactional RPC, TCP, and active messages; security infrastructure; extensible systems and APIs; performance analysis and engineering of large software systems. Homework assignments, exam, and term paper or project required. ",https://www2.eecs.berkeley.edu/Courses/CS262A,Introduction to Digital Design and Integrated Circuits Lab,CS 262A, COMPSCI 162 and entrance exam.,[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 4.0,http://inst.eecs.berkeley.edu/~cs262a
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS251LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LB," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251lb
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LA," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251la
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 251LA," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs251la
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS251LA,Introduction to Digital Design and Integrated Circuits,EECS 251LA," EECS 16A, EECS 16B, and COMPSCI 61C; and EL ENG 105 is recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LEC, 2.0,http://inst.eecs.berkeley.edu/~eecs251la
" An introduction to digital circuit and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The class includes extensive use of industrial grade design automation and verification tools for assignments, labs, and projects.",https://www2.eecs.berkeley.edu/Courses/EECS251A,Introduction to Embedded Systems,EECS 251A, EECS 16A and EECS 16B; COMPSCI 61C; and recommended: EL ENG 105. Students must enroll concurrently in at least one the laboratory flavors EECS 251LA or EECS 251LB. Students wishing to take a second laboratory flavor next term can sign-up only for that laboratory section and receive a letter grade. The prerequisite for “Lab-only” enrollment that term will be EECS 251A from previous terms.,[{'Sanjit\xa0A.\xa0Seshia': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/seshia.html'}],,LEC, 3.0,http://inst.eecs.berkeley.edu/~eecs251a
" This course introduces students to the basics of models, analysis tools, and control for embedded systems operating in real time. Students learn how to combine physical processes with computation. Topics include models of computation, control, analysis and verification, interfacing with the physical world, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component, with emphasis on a semester-long sequence of projects. ",https://www2.eecs.berkeley.edu/Courses/CSC249A,Optimization Models in Engineering,CS C249A,,[{'Laurent\xa0El\xa0Ghaoui': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/elghaoui.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~cs249a
" This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization. ",https://www2.eecs.berkeley.edu/Courses/EECS227AT,Statistical Signal Processing,EECS 227AT, MATH 54 or consent of instructor.,[{'Jiantao\xa0JIAO': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/jiantao.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs227at
" This course connects classical statistical signal processing (Hilbert space filtering theory by Wiener and Kolmogorov, state space model, signal representation, detection and estimation, adaptive filtering) with modern statistical and machine learning theory and applications. It focuses on concrete algorithms and combines principled theoretical thinking with real applications.",https://www2.eecs.berkeley.edu/Courses/EECS225A,Computational Principles for High-dimensional Data Analysis,EECS 225A, EL ENG 120 and EECS 126.,"[{'Jiantao\xa0JIAO': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/jiantao.html', 'Yi\xa0Ma,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/yima.html'}]",,LEC, 3.0,http://inst.eecs.berkeley.edu/~eecs225a
" Introduction to fundamental geometric and statistical concepts and principles of low-dimensional models for high-dimensional signal and data analysis, spanning basic theory, efficient algorithms, and diverse real-world applications. Systematic study of both sampling complexity and computational complexity for sparse, low-rank, and low-dimensional models – including important cases such as matrix completion, robust principal component analysis, dictionary learning, and deep networks.",https://www2.eecs.berkeley.edu/Courses/EECS208,Introduction to Robotics,EECS 208," The following courses are recommended undergraduate linear algebra (Math 110), statistics (Stat 134), and probability (EE126). Back-ground in signal processing (ELENG 123), optimization (ELENG C227T), machine learning (CS189/289), and computer vision (COMPSCI C280) may allow you to appreciate better certain aspects of the course material, but not necessary all at once. The course is open to senior undergraduates, with consent from the instructor.","[{'Yi\xa0Ma,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/yima.html'}]","Jaeyun Seo,Jay Monga,Josephine Koe,Koushil Sreenath",LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs208
" This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward & inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, & control. We will present techniques for geometric motion planning & obstacle avoidance. Open problems in trajectory generation with dynamic constraints will also be discussed. The course also presents the use of the same analytical techniques as manipulation for the analysis of images & computer vision. Low level vision, structure from motion, & an introduction to vision & learning will be covered. The course concludes with current applications of robotics.",https://www2.eecs.berkeley.edu/Courses/EECS206A,Supervised Independent Study,EECS 206A," Familiarity with linear algebra at level of EECS 16A/EECS 16B or MATH 54. Experience doing coding in python at the level of COMPSCI 61A. Preferred: experience developing software at level of COMPSCI 61B and experience using Linux. EECS 120 is not required, but some knowledge of linear systems may be helpful for the control of robots.",[{}],"Prof. David Foster, PhD",IND, 4.0,http://inst.eecs.berkeley.edu/~eecs206a
 Supervised independent study. Enrollment restrictions apply. ,https://www2.eecs.berkeley.edu/Courses/CS199,UCBUGG: 3D Modeling and Animation,CS 199, Consent of instructor and major adviser. ,[{'Dan\xa0Garcia': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/garcia.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs199
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_3164,Introduction to Algorithmic Thinking,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Jelani\xa0Nelson': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/minilek.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4643,Algorithmic Fairness and the Genome  (2 hour version),CS 198, 2.0 GPA or better; 60 units completed. ,[{'Nilah\xa0Monnier\xa0Ioannidis': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nilah.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4624,Algorithmic Fairness and the Genome  (1 hour version),CS 198, 2.0 GPA or better; 60 units completed. ,[{'Nilah\xa0Monnier\xa0Ioannidis': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nilah.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4623,Recommendation Systems in Machine Learning DeCal,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Anca\xa0Dragan': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/anca.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4622,Digital Privacy,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Laurent\xa0El\xa0Ghaoui': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/elghaoui.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4617,Robot Autonomous Racing DeCal,CS 198, 2.0 GPA or better; 60 units completed. ,[{}],"Dr. Allen Y. Yang, PhD",GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4621,ANova DeCal,CS 198, 2.0 GPA or better; 60 units completed. ,[{'John\xa0DeNero': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/denero.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4277,Cloud Computing and SaaS,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Prof.\xa0Armando\xa0Fox': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/fox.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_4290,Going Down the EECS Stack DeCal,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Anant\xa0Sahai': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/sahai.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_3052,Web Design DeCal,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Bjoern\xa0Hartmann': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/hartmann.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_2940,Linux System Administration DeCal,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Paul\xa0HILFINGER': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/hilfinger.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_3339,UCBUGG: 3D Modeling and Animation,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Dan\xa0Garcia': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/garcia.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_3164,Directed Group Studies for Advanced Undergraduates,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Dan\xa0Garcia': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/garcia.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198,iOS DeCal,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Dan\xa0Garcia': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/garcia.html'}],,GRP, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Group study of selected topics in Computer Sciences, usually relating to new developments. ",https://www2.eecs.berkeley.edu/Courses/CS198_2872,Senior Honors Thesis Research,CS 198, 2.0 GPA or better; 60 units completed. ,[{'Sarah\xa0Chasins': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/schasins.html'}],,IND, 1-4,http://inst.eecs.berkeley.edu/~cs198
" Thesis work under the supervision of a faculty member. To obtain credit the student must, at the end of two semesters, submit a satisfactory thesis to the Electrical Engineering and Computer Science department archive. A total of four units must be taken. The units many be distributed between one or two semesters in any way. H196A-H196B count as graded technical elective units, but may not be used to satisfy the requirement for 27 upper division technical units in the College of Letters and Science with a major in Computer Science. ",https://www2.eecs.berkeley.edu/Courses/CSH196A,Senior Honors Thesis Research,CS H196A, Open only to students in the computer science honors program. ,[{'Ruzena\xa0BAJCSY': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/bajcsy.html'}],,IND, 1-4,http://inst.eecs.berkeley.edu/~cs196a
" Thesis work under the supervision of a faculty member. To obtain credit the student must, at the end of two semesters, submit a satisfactory thesis to the Electrical Engineering and Computer Science department archive. A total of four units must be taken. The units many be distributed between one or two semesters in any way. H196A-H196B count as graded technical elective units, but may not be used to satisfy the requirement for 27 upper division technical units in the College of Letters and Science with a major in Computer Science. ",https://www2.eecs.berkeley.edu/Courses/CSH196A,Social Implications of Computer Technology,CS H196A, Open only to students in the computer science honors program. ,"[{'John\xa0DeNero': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/denero.html', 'Prof.\xa0Josh\xa0Hug': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/joshhug.html'}]",Nikita Samarin,LEC, 1-4,http://inst.eecs.berkeley.edu/~cs196a
 Topics include electronic community; the changing nature of work; technological risks; the information economy; intellectual property; privacy; artificial intelligence and the sense of self; pornography and censorship; professional ethics. Students will lead discussions on additional topics. ,https://www2.eecs.berkeley.edu/Courses/CS195,Special Topics on Decentralized Finance,CS 195,,[{'Xiaodong\xa0Song': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/song.html'}],"Nate Pola,Neil Giridharan,Vivek Nair,Xiaoyuan Liu",LEC, 1.0,http://inst.eecs.berkeley.edu/~cs195
 Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4634,Computational Genomics,CS 194, Consent of instructor. ,[{'Nilah\xa0Monnier\xa0Ioannidis': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nilah.html'}],,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs194
 Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4584,EECS for All: Social Justice in EECS,CS 194, Consent of instructor. ,[{'John\xa0CANNY': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/canny.html'}],"Alex Mabanta,Evonne Ng,Omotara Oloye",LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs194
 Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4431,Intro to Computer Vision and Computational Photography,CS 194, Consent of instructor. ,"[{'Alexei\xa0Efros': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/efros.html', 'Angjoo\xa0Kanazawa': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/kanazawa.html'}]",Tim Brooks,LEC, 1.0-4.0,http://inst.eecs.berkeley.edu/~cs194
 Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4237,Parallel Programming,CS 194, Consent of instructor. ,[{'Kathy\xa0Yelick': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/yelick.html'}],"Alexander Julian Reinking,Alok Tripathy",LEC, 1.0-4.0,"https://inst.eecs.berkeley.edu/~cs194-26/,http://inst.eecs.berkeley.edu/~cs194"
 Topics will vary semester to semester. See the Computer Science Division announcements. ,https://www2.eecs.berkeley.edu/Courses/CS194_4178,Quantum Information Science and Technology,CS 194, Consent of instructor. ,[{}],Hartmut Haeffner,LEC, 1.0-4.0,"https://inst.eecs.berkeley.edu/~cs194-15,http://inst.eecs.berkeley.edu/~cs194"
" This multidisciplinary course provides an introduction to fundamental conceptual aspects of quantum mechanics from a computational and informational theoretic perspective, as well as physical implementations and technological applications of quantum information science. Basic sections of quantum algorithms, complexity, and cryptography, will be touched upon, as well as pertinent physical realizations from nanoscale science and engineering. ",https://www2.eecs.berkeley.edu/Courses/CSC191,Introduction to Machine Learning,CS C191," Linear Algebra (EECS 16A or PHYSICS 89 or MATH 54) AND either discrete mathematics (COMPSCI 70 or MATH 55), or quantum mechanics (PHYSICS 7C or PHYSICS 137A or CHEM 120A).","[{'JENNIFER\xa0LISTGARTEN': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/listgarten.html', 'Jitendra\xa0MALIK': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/malik.html'}]",Marvin M Zhang,LEC, 3.0,http://inst.eecs.berkeley.edu/~cs191
" Theoretical foundations, algorithms, methodologies, and applications for machine learning. Topics may include supervised methods for regression and classication (linear models, trees, neural networks, ensemble methods, instance-based methods); generative and discriminative probabilistic models; Bayesian parametric learning; density estimation and clustering; Bayesian networks; time series models; dimensionality reduction; programming projects covering a variety of real-world applications. ",https://www2.eecs.berkeley.edu/Courses/CS189,Introduction to Artificial Intelligence,CS 189, MATH 53 and MATH 54; and COMPSCI 70 or consent of instructor.,"[{'Anca\xa0Dragan': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/anca.html', 'Pieter\xa0Abbeel': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/abbeel.html'}]",Kai Pin Ryan Koh,LEC, 4.0,http://inst.eecs.berkeley.edu/~cs189
" Ideas and techniques underlying the design of intelligent computer systems. Topics include search, game playing, knowledge representation, inference, planning, reasoning under uncertainty, machine learning, robotics, perception, and language understanding.",https://www2.eecs.berkeley.edu/Courses/CS188,Introduction to Database Systems,CS 188," COMPSCI 61A, COMPSCI 61B, and COMPSCI 70.",[{'Lakshya\xa0Jain': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/lakshyajain.html'}],Kaitlyn Lee,WBL, 4.0,http://inst.eecs.berkeley.edu/~cs188
" Broad introduction to systems for storing, querying, updating and managing large databases. Computer science skills synthesizing viewpoints from low-level systems architecture to high-level modeling and declarative logic. System internals, including the complex details of query optimization and execution, concurrency control, indexing, and memory management.  More abstract issues in query languages and data modeling – students are exposed to formal relational languages, SQL, full-text search, entity-relationship modeling, normalization, and physical database design. Recent technological trends in the field, including “Big Data” programming libraries like MapReduce, and distributed key-value stores with various consistency models.",https://www2.eecs.berkeley.edu/Courses/CSW186,Efficient Algorithms and Intractable Problems,CS W186, COMPSCI 61B and COMPSCI 61C.,[{'Jelani\xa0Nelson': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/minilek.html'}],"Kevin Zhu,Tianchen Liu,Vaibhav Gattani",LEC, 4.0,http://inst.eecs.berkeley.edu/~cs186
" Concept and basic techniques in the design and analysis of algorithms; models of computation; lower bounds; algorithms for optimum search trees, balanced trees and UNION-FIND algorithms; numerical and algebraic algorithms; combinatorial algorithms. Turing machines, how to count steps, deterministic and nondeterministic Turing machines, NP-completeness. Unsolvable and intractable problems. ",https://www2.eecs.berkeley.edu/Courses/CS170,Introduction to Software Engineering,CS 170, COMPSCI 61B and COMPSCI 70.,"[{'Michael\xa0Ball': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mball.html', 'Pamela\xa0Fox': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/pamelafox.html'}]",,LEC, 4.0,http://inst.eecs.berkeley.edu/~cs170
" Ideas and techniques for designing, developing, and modifying large software systems. Service-oriented architecture, behavior-driven design with user stories, cloud computing, test-driven development, automated testing, cost and quality metrics for maintainability and effort estimation, practical performance and security in software operations, design patterns and refactoring, specification and documentation, agile project team organization and management.",https://www2.eecs.berkeley.edu/Courses/CS169A,Programming Languages and Compilers,CS 169A, COMPSCI 61A and COMPSCI 61B; COMPSCI 70 is recommended.,[{'Sarah\xa0Chasins': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/schasins.html'}],Justin Lubin,LEC, 4.0,http://inst.eecs.berkeley.edu/~cs169a
" Survey of programming languages. The design of modern programming languages. Principles and techniques of scanning, parsing, semantic analysis, and code generation. Implementation of compilers, interpreters, and assemblers. Overview of run-time organization and error handling. ",https://www2.eecs.berkeley.edu/Courses/CS164,Operating Systems and System Programming,CS 164, COMPSCI 61B and COMPSCI 61C.,[{'Ion\xa0Stoica': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/stoica.html'}],"Edward Zeng,Sean Kim",LEC, 4.0,http://inst.eecs.berkeley.edu/~cs164
" Basic concepts of operating systems and system programming. Utility programs, subsystems, multiple-program systems. Processes, interprocess communication, and synchronization. Memory allocation, segmentation, paging. Loading and linking, libraries. Resource allocation, scheduling, performance evaluation. File systems, storage devices, I/O systems. Protection, security, and privacy. ",https://www2.eecs.berkeley.edu/Courses/CS162,Computer Security,CS 162," COMPSCI 61B, COMPSCI 61C, and COMPSCI 70.","[{'Nicholas\xa0Weaver': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nweaver.html', 'Raluca\xa0Popa': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/ralucap.html'}]",Nicholas Ngai,LEC, 4.0,http://inst.eecs.berkeley.edu/~cs162
" Introduction to computer security. Cryptography, including encryption, authentication, hash functions, cryptographic protocols, and applications. Operating system security, access control. Network security, firewalls, viruses, and worms. Software security, defensive programming, and language-based security. Case studies from real-world systems. ",https://www2.eecs.berkeley.edu/Courses/CS161,Introduction to Digital Design and Integrated Circuits Lab,CS 161, COMPSCI 61C; and COMPSCI 70 or MATH 55.,[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 4.0,http://inst.eecs.berkeley.edu/~cs161
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB," EECS 16A, EECS 16B, and COMPSCI 61C; EL ENG 105 recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB," EECS 16A, EECS 16B, and COMPSCI 61C; EL ENG 105 recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB," EECS 16A, EECS 16B, and COMPSCI 61C; EL ENG 105 recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151lb
" This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms.  A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow.  Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail.  The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor system, with caches, graphics acceleration, and external peripheral components.  The design is mapped and demonstrated on an FPGA hardware platform.",https://www2.eecs.berkeley.edu/Courses/EECS151LB,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LB," EECS 16A, EECS 16B, and COMPSCI 61C; EL ENG 105 recommended.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151lb
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LA," COMPSCI 61C, EECS 16A, EECS 16B, and EL ENG 105.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151la
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits Lab,EECS 151LA," COMPSCI 61C, EECS 16A, EECS 16B, and EL ENG 105.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LAB, 2.0,http://inst.eecs.berkeley.edu/~eecs151la
" This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped to simulation and layout specification.",https://www2.eecs.berkeley.edu/Courses/EECS151LA,Introduction to Digital Design and Integrated Circuits,EECS 151LA," COMPSCI 61C, EECS 16A, EECS 16B, and EL ENG 105.",[{'Borivoje\xa0NIKOLIC': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nikolic.html'}],,LEC, 2.0,http://inst.eecs.berkeley.edu/~eecs151la
" An introduction to digital and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher-levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The class includes extensive use of industrial grade design automation and verification tools for assignments, labs and projects.  
The class has two lab options: ASIC Lab (EECS 151LA) and FPGA Lab (EECS 151LB). Students must enroll in at least one of the labs concurrently with the class.",https://www2.eecs.berkeley.edu/Courses/EECS151,Introduction to Embedded Systems,EECS 151, EECS 16A and EECS 16B.,[{'Sanjit\xa0A.\xa0Seshia': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/seshia.html'}],,LEC, 3.0,http://inst.eecs.berkeley.edu/~eecs151
" This course introduces students to the basics of modeling, analysis, and design of embedded, cyber-physical systems. Students learn how to integrate computation with physical processes to meet a desired specification. Topics include models of computation, control, analysis and verification, interfacing with the physical world, real-time behaviors, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component, with emphasis on a semester-long sequence of projects.",https://www2.eecs.berkeley.edu/Courses/EECS149,Optimization Models in Engineering,EECS 149," COMPSCI 61C and COMPSCI 70; EECS 16A and EECS 16B, or permission of instructor.",[{'Laurent\xa0El\xa0Ghaoui': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/elghaoui.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs149
" This course covers the fundamentals of probability and random processes useful in fields such as networks, communication, signal processing, and control. Sample space, events, probability law. Conditional probability. Independence. Random variables. Distribution, density functions. Random vectors. Law of large numbers. Central limit theorem. Estimation and detection. Markov chains. ",https://www2.eecs.berkeley.edu/Courses/EECS126,Introduction to Robotics,EECS 126, COMPSCI 70 preferred but not required; Familiarity with linear algebra.,"[{'Yi\xa0Ma,\xa0PhD': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/yima.html'}]","Jaeyun Seo,Jay Monga,Josephine Koe,Koushil Sreenath",LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs126
" This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward & inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, & control. We will present techniques for geometric motion planning & obstacle avoidance. Open problems in trajectory generation with dynamic constraints will also be discussed. The course also presents the use of the same analytical techniques as manipulation for the analysis of images & computer vision. Low level vision, structure from motion, & an introduction to vision & learning will be covered. The course concludes with current applications of robotics.",https://www2.eecs.berkeley.edu/Courses/EECSC106A,Principles & Techniques of Data Science,EECS C106A," Familiarity with linear algebra at the level of EECS 16A/EECS 16B or Math 54. Experience coding in python at the level of COMPSCI 61A. 
Preferred: experience developing software at the level of COMPSCI 61B and experience using Linux.",[{}],"Alvin Wan,Fernando Perez",LEC, 4.0,http://inst.eecs.berkeley.edu/~eecs106a
" In this course, students will explore the data science lifecycle, including question formulation, data collection and cleaning, exploratory data analysis and visualization, statistical inference and prediction​, and decision-making.​ This class will focus on quantitative critical thinking​ and key principles and techniques needed to carry out this cycle. These include languages for transforming, querying and analyzing data; algorithms for machine learning methods including regression, classification and clustering; principles behind creating informative data visualizations; statistical concepts of measurement error and prediction; and techniques for scalable data processing.",https://www2.eecs.berkeley.edu/Courses/CSC100,Computational Structures in Data Science,CS C100," COMPSCI C8 / DATA C8 / INFO C8 / STAT C8; and COMPSCI 61A, COMPSCI 88, or ENGIN 7; Corequisite:  MATH 54 or EECS 16A.",[{'Michael\xa0Ball': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/mball.html'}],,LEC, 4.0,http://inst.eecs.berkeley.edu/~cs100
" Development of Computer Science topics appearing in Foundations of Data Science (C8); expands computational concepts and techniques of abstraction. Understanding  the structures that underlie the programs, algorithms, and languages used in data science and elsewhere.   Mastery of a particular programming language while studying general techniques for managing program complexity, e.g., functional, object-oriented, and declarative programming. Provides practical experience with composing larger systems through several significant programming projects.",https://www2.eecs.berkeley.edu/Courses/CS88,Discrete Mathematics and Probability Theory,CS 88," MATH 1A. Also, this course is a Data Science connector course and may only be taken concurrently with or after COMPSCI C8/DATA C8/INFO C8/STAT C8. Students may take more than one Data Science connector (88) course if they wish, concurrent with or after having taken the C8 course.","[{'Babak\xa0AYAZIFAR': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/ayazifar.html', 'Satish\xa0Rao': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/rao.html'}]",Tarang Srivastava,LEC, 3.0,http://inst.eecs.berkeley.edu/~cs88
" Logic, infinity, and induction; applications include undecidability and stable marriage problem. Modular arithmetic and GCDs; applications include primality testing and cryptography. Polynomials; examples include error correcting codes and interpolation. Probability including sample spaces, independence, random variables, law of large numbers; examples include load balancing, existence arguments, Bayesian inference. ",https://www2.eecs.berkeley.edu/Courses/CS70,Machine Structures,CS 70," Sophomore mathematical maturity, and programming experience equivalent to that gained with a score of 3 or above on the Advanced Placement Computer Science A exam.","[{'John\xa0WAWRZYNEK': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/wawrzynek.html', 'Nicholas\xa0Weaver': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/nweaver.html'}]","Avinash Nandakumar,Connor McMahon,Jerry Xu",LEC, 4.0,http://inst.eecs.berkeley.edu/~cs70
" The internal organization and operation of digital computers. Machine architecture, support for high-level languages (logic, arithmetic, instruction sequencing) and operating systems (I/O, interrupts, memory management, process switching). Elements of computer logic design. Tradeoffs involved in fundamental architectural design decisions. ",https://www2.eecs.berkeley.edu/Courses/CS61C,Data Structures,CS 61C," COMPSCI 61A, along with either COMPSCI 61B or COMPSCI 61BL, or programming experience equivalent to that gained in COMPSCI 9C, COMPSCI 9F, or COMPSCI 9G.",[{'Paul\xa0HILFINGER': 'https://www2.eecs.berkeley.edu/Faculty/Homepages/hilfinger.html'}],"Anjali Kantharuban,Henry Maier,Linda Deng",LEC, 4.0,http://inst.eecs.berkeley.edu/~cs61c
